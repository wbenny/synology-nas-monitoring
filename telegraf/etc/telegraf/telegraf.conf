# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## Maximum number of unwritten metrics per output.  Increasing this value
  ## allows for longer periods of output downtime without dropping metrics at the
  ## cost of higher maximum memory usage.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Log at debug level.
  # debug = false
  ## Log only error level messages.
  # quiet = false

  ## Log target controls the destination for logs and can be one of "file",
  ## "stderr" or, on Windows, "eventlog".  When set to "file", the output file
  ## is determined by the "logfile" setting.
  # logtarget = "file"

  ## Name of the file to be logged to when using the "file" logtarget.  If set to
  ## the empty string then logs are written to stderr.
  # logfile = ""

  ## The logfile will be rotated after the time interval specified.  When set
  ## to 0 no time based rotation is performed.  Logs are rotated only when
  ## written to, if there is no log activity rotation may be delayed.
  # logfile_rotation_interval = "0d"

  ## The logfile will be rotated when it becomes larger than the specified
  ## size.  When set to 0 no size based rotation is performed.
  # logfile_rotation_max_size = "0MB"

  ## Maximum number of rotated archives to keep, any older logs are deleted.
  ## If set to -1, no archives are removed.
  # logfile_rotation_max_archives = 5

  ## Pick a timezone to use when logging or type 'local' for local time.
  ## Example: America/Chicago
  # log_with_timezone = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# # Configuration for sending metrics to InfluxDB
[[outputs.influxdb_v2]]
#   ## The URLs of the InfluxDB cluster nodes.
#   ##
#   ## Multiple URLs can be specified for a single cluster, only ONE of the
#   ## urls will be written to each interval.
#   ##   ex: urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]
    urls = ["http://your-nas:8086"]
#
#   ## Token for authentication.
    token = "your-token"
#
#   ## Organization is the name of the organization you wish to write to; must exist.
    organization = "NAS"
#
#   ## Destination bucket to write into.
    bucket = "telegraf"
#
#   ## The value of this tag will be used to determine the bucket.  If this
#   ## tag is not set the 'bucket' option is used as the default.
#   # bucket_tag = ""
#
#   ## If true, the bucket tag will not be added to the metric.
#   # exclude_bucket_tag = false
#
#   ## Timeout for HTTP messages.
#   # timeout = "5s"
#
#   ## Additional HTTP headers
#   # http_headers = {"X-Special-Header" = "Special-Value"}
#
#   ## HTTP Proxy override, if unset values the standard proxy environment
#   ## variables are consulted to determine which proxy, if any, should be used.
#   # http_proxy = "http://corporate.proxy:3128"
#
#   ## HTTP User-Agent
#   # user_agent = "telegraf"
#
#   ## Content-Encoding for write request body, can be set to "gzip" to
#   ## compress body or "identity" to apply no encoding.
#   # content_encoding = "gzip"
#
#   ## Enable or disable uint support for writing uints influxdb 2.0.
#   # influx_uint_support = false
#
#   ## Optional TLS Config for use on HTTP connections.
#   # tls_ca = "/etc/telegraf/ca.pem"
#   # tls_cert = "/etc/telegraf/cert.pem"
#   # tls_key = "/etc/telegraf/key.pem"
#   ## Use TLS but skip chain & host verification
#   # insecure_skip_verify = false


###############################################################################
#                                SYNOLOGY                                     #
###############################################################################


#
# SNMPv2-MIB::systemGroup
# -----------------------
#

[[inputs.snmp]]
    agents = ["your-nas"]
    path = ["/mibs"]

    name = "system"

    [[inputs.snmp.field]]
        name = "sysName"
        oid = "SNMPv2-MIB::sysName.0"
        is_tag = true

    [[inputs.snmp.field]]
        name = "sysDescr"
        oid = "SNMPv2-MIB::sysDescr.0"

    [[inputs.snmp.field]]
        name = "sysContact"
        oid = "SNMPv2-MIB::sysContact.0"

    [[inputs.snmp.field]]
        name = "sysLocation"
        oid = "SNMPv2-MIB::sysLocation.0"

    [[inputs.snmp.field]]
        name = "sysUpTime"
        oid = "SNMPv2-MIB::sysUpTime.0"

#
# UCD-SNMP-MIB::systemStats
# -------------------------
#

[[inputs.snmp]]
    agents = ["your-nas"]
    path = ["/mibs"]

    name = "systemStats"

    [[inputs.snmp.field]]
        name = "ssSwapIn"
        oid = "UCD-SNMP-MIB::ssSwapIn.0"

    [[inputs.snmp.field]]
        name = "ssSwapOut"
        oid = "UCD-SNMP-MIB::ssSwapOut.0"

    [[inputs.snmp.field]]
        name = "ssIOSent"
        oid = "UCD-SNMP-MIB::ssIOSent.0"

    [[inputs.snmp.field]]
        name = "ssIOReceive"
        oid = "UCD-SNMP-MIB::ssIOReceive.0"

    [[inputs.snmp.field]]
        name = "ssSysInterrupts"
        oid = "UCD-SNMP-MIB::ssSysInterrupts.0"

    [[inputs.snmp.field]]
        name = "ssSysContext"
        oid = "UCD-SNMP-MIB::ssSysContext.0"

    [[inputs.snmp.field]]
        name = "ssCpuUser"
        oid = "UCD-SNMP-MIB::ssCpuUser.0"

    [[inputs.snmp.field]]
        name = "ssCpuSystem"
        oid = "UCD-SNMP-MIB::ssCpuSystem.0"

    [[inputs.snmp.field]]
        name = "ssCpuIdle"
        oid = "UCD-SNMP-MIB::ssCpuIdle.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawUser"
        oid = "UCD-SNMP-MIB::ssCpuRawUser.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawNice"
        oid = "UCD-SNMP-MIB::ssCpuRawNice.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawSystem"
        oid = "UCD-SNMP-MIB::ssCpuRawSystem.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawIdle"
        oid = "UCD-SNMP-MIB::ssCpuRawIdle.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawWait"
        oid = "UCD-SNMP-MIB::ssCpuRawWait.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawKernel"
        oid = "UCD-SNMP-MIB::ssCpuRawKernel.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawInterrupt"
        oid = "UCD-SNMP-MIB::ssCpuRawInterrupt.0"

    [[inputs.snmp.field]]
        name = "ssIORawSent"
        oid = "UCD-SNMP-MIB::ssIORawSent.0"

    [[inputs.snmp.field]]
        name = "ssIORawReceived"
        oid = "UCD-SNMP-MIB::ssIORawReceived.0"

    [[inputs.snmp.field]]
        name = "ssRawInterrupts"
        oid = "UCD-SNMP-MIB::ssRawInterrupts.0"

    [[inputs.snmp.field]]
        name = "ssRawContexts"
        oid = "UCD-SNMP-MIB::ssRawContexts.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawSoftIRQ"
        oid = "UCD-SNMP-MIB::ssCpuRawSoftIRQ.0"

    [[inputs.snmp.field]]
        name = "ssRawSwapIn"
        oid = "UCD-SNMP-MIB::ssRawSwapIn.0"

    [[inputs.snmp.field]]
        name = "ssRawSwapOut"
        oid = "UCD-SNMP-MIB::ssRawSwapOut.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawSteal"
        oid = "UCD-SNMP-MIB::ssCpuRawSteal.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawGuest"
        oid = "UCD-SNMP-MIB::ssCpuRawGuest.0"

    [[inputs.snmp.field]]
        name = "ssCpuRawGuestNice"
        oid = "UCD-SNMP-MIB::ssCpuRawGuestNice.0"

    [[inputs.snmp.field]]
        name = "ssCpuNumCpus"
        oid = "UCD-SNMP-MIB::ssCpuNumCpus.0"

#
# UCD-SNMP-MIB::memory
# --------------------
#
# Grab only 64-bit "...X" values.
#

[[inputs.snmp]]
    agents = ["your-nas"]
    path = ["/mibs"]

    name = "memory"

    [[inputs.snmp.field]]
        name = "memTotalSwap"
        oid = "UCD-SNMP-MIB::memTotalSwapX.0"

    [[inputs.snmp.field]]
        name = "memAvailSwap"
        oid = "UCD-SNMP-MIB::memAvailSwapX.0"

    [[inputs.snmp.field]]
        name = "memTotalReal"
        oid = "UCD-SNMP-MIB::memTotalRealX.0"

    [[inputs.snmp.field]]
        name = "memAvailReal"
        oid = "UCD-SNMP-MIB::memAvailRealX.0"

    [[inputs.snmp.field]]
        name = "memTotalFree"
        oid = "UCD-SNMP-MIB::memTotalFreeX.0"

    [[inputs.snmp.field]]
        name = "memMinimumSwap"
        oid = "UCD-SNMP-MIB::memMinimumSwapX.0"

    [[inputs.snmp.field]]
        name = "memShared"
        oid = "UCD-SNMP-MIB::memSharedX.0"

    [[inputs.snmp.field]]
        name = "memBuffer"
        oid = "UCD-SNMP-MIB::memBufferX.0"

    [[inputs.snmp.field]]
        name = "memCached"
        oid = "UCD-SNMP-MIB::memCachedX.0"

    # [[inputs.snmp.field]]
    #     name = "memSwapError"
    #     oid = "UCD-SNMP-MIB::memSwapError.0"
    #
    # [[inputs.snmp.field]]
    #     name = "memSwapErrorMsg"
    #     oid = "UCD-SNMP-MIB::memSwapErrorMsg.0"

#
# HOST-RESOURCES-MIB::hrSystem
# ----------------------------
#

[[inputs.snmp]]
    agents = ["your-nas"]
    path = ["/mibs"]

    name = "hrSystem"

    [[inputs.snmp.field]]
        name = "hrSystemUptime"
        oid = "HOST-RESOURCES-MIB::hrSystemUptime.0"

    # [[inputs.snmp.field]]
    #     name = "hrSystemDate"
    #     oid = "HOST-RESOURCES-MIB::hrSystemDate.0"
    #
    # [[inputs.snmp.field]]
    #     name = "hrSystemInitialLoadDevice"
    #     oid = "HOST-RESOURCES-MIB::hrSystemInitialLoadDevice.0"
    #
    # [[inputs.snmp.field]]
    #     name = "hrSystemInitialLoadParameters"
    #     oid = "HOST-RESOURCES-MIB::hrSystemInitialLoadParameters.0"

    [[inputs.snmp.field]]
        name = "hrSystemNumUsers"
        oid = "HOST-RESOURCES-MIB::hrSystemNumUsers.0"

    [[inputs.snmp.field]]
        name = "hrSystemProcesses"
        oid = "HOST-RESOURCES-MIB::hrSystemProcesses.0"

    # [[inputs.snmp.field]]
    #     name = "hrSystemMaxProcesses"
    #     oid = "HOST-RESOURCES-MIB::hrSystemMaxProcesses.0"

#
# SYNOLOGY-SYSTEM-MIB::synoSystem
# -------------------------------
#

[[inputs.snmp]]
    agents = ["your-nas"]
    path = ["/mibs"]

    name = "synoSystem"

    [[inputs.snmp.field]]
        name = "systemStatus"
        oid = "SYNOLOGY-SYSTEM-MIB::systemStatus.0"

    [[inputs.snmp.field]]
        name = "temperature"
        oid = "SYNOLOGY-SYSTEM-MIB::temperature.0"

    [[inputs.snmp.field]]
        name = "powerStatus"
        oid = "SYNOLOGY-SYSTEM-MIB::powerStatus.0"

    [[inputs.snmp.field]]
        name = "systemFanStatus"
        oid = "SYNOLOGY-SYSTEM-MIB::systemFanStatus.0"

    [[inputs.snmp.field]]
        name = "cpuFanStatus"
        oid = "SYNOLOGY-SYSTEM-MIB::cpuFanStatus.0"

    [[inputs.snmp.field]]
        name = "modelName"
        oid = "SYNOLOGY-SYSTEM-MIB::modelName.0"

    [[inputs.snmp.field]]
        name = "serialNumber"
        oid = "SYNOLOGY-SYSTEM-MIB::serialNumber.0"

    [[inputs.snmp.field]]
        name = "version"
        oid = "SYNOLOGY-SYSTEM-MIB::version.0"

    [[inputs.snmp.field]]
        name = "upgradeAvailable"
        oid = "SYNOLOGY-SYSTEM-MIB::upgradeAvailable.0"


#
# UPS
#

[[inputs.snmp]]
    agents = ["10.0.0.10"]
    path = ["/mibs"]
    name = "ups"

    [[inputs.snmp.field]]
       name = "upsModel"
       oid = "SYNOLOGY-UPS-MIB::upsDeviceModel.0" 
     [[inputs.snmp.field]]
       name = "upsStatus"
       oid = "SYNOLOGY-UPS-MIB::upsInfoStatus.0"
     [[inputs.snmp.field]]
       name = "upsLoad"
       oid = "SYNOLOGY-UPS-MIB::upsInfoLoadValue.0"
     [[inputs.snmp.field]]
       name = "upsBatteryCharge"
       oid = "SYNOLOGY-UPS-MIB::upsBatteryChargeValue.0"
     [[inputs.snmp.field]]
       name = "upsBatteryChargeLow"
       oid = "SYNOLOGY-UPS-MIB::upsBatteryChargeLow.0"
     [[inputs.snmp.field]]
       name = "upsBatteryChargeWarning"
       oid = "SYNOLOGY-UPS-MIB::upsBatteryChargeWarning.0"
     [[inputs.snmp.field]]
       name = "upsBatteryVoltage"
       oid = "SYNOLOGY-UPS-MIB::upsBatteryVoltageValue.0"
     [[inputs.snmp.field]]
       name = "upsBatteryRuntime"
       oid = "SYNOLOGY-UPS-MIB::upsBatteryRuntimeValue.0"
     [[inputs.snmp.field]]
       name = "upsInputVoltage"
       oid = "SYNOLOGY-UPS-MIB::upsInputVoltageValue.0"
     [[inputs.snmp.field]]#Opaque: Float: 24.000000 Volt DC
       name = "upsBatteryVoltageNominal"
       oid = "SYNOLOGY-UPS-MIB::upsBatteryVoltageNominal.0"
     [[inputs.snmp.field]]#STRING: PbAcid
       name = "upsBatteryType"
       oid = "SYNOLOGY-UPS-MIB::upsBatteryType.0"
       
#
# Tables.
#

[[inputs.snmp]]
    agents = ["your-nas"]
    path = ["/mibs"]

    #
    # Load average.
    #

    [[inputs.snmp.table]]
        oid = "UCD-SNMP-MIB::laTable"

        [[inputs.snmp.table.field]]
            oid = "UCD-SNMP-MIB::laNames"
            is_tag = true

    #
    # Network interface.
    #

    [[inputs.snmp.table]]
        oid = "IF-MIB::ifTable"

        [[inputs.snmp.table.field]]
            oid = "IF-MIB::ifDescr"
            is_tag = true

    [[inputs.snmp.table]]
        oid = "IF-MIB::ifXTable"

        [[inputs.snmp.table.field]]
            oid = "IF-MIB::ifName"
            is_tag = true

    # [[inputs.snmp.table]]
    #     name = "interface"
    #     oid = "IF-MIB::ifTable"
    #
    #     [[inputs.snmp.table.field]]
    #         name = "ifDescr"
    #         oid = "IF-MIB::ifDescr"
    #         is_tag = true
    #
    # [[inputs.snmp.table]]
    #     name = "interface"
    #     oid = "IF-MIB::ifXTable"
    #
    #     [[inputs.snmp.table.field]]
    #         name = "ifDescr"
    #         oid = "IF-MIB::ifDescr"
    #         is_tag = true

    #
    # System volume.
    #

    [[inputs.snmp.table]]
        oid = "HOST-RESOURCES-MIB::hrStorageTable"

        [[inputs.snmp.table.field]]
            oid = "HOST-RESOURCES-MIB::hrStorageDescr"
            is_tag = true

    #
    # Synology specific MIBs.
    # -----------------------
    #

    #
    # Services.
    #

    [[inputs.snmp.table]]
        oid = "SYNOLOGY-SERVICES-MIB::serviceTable"

        [[inputs.snmp.table.field]]
            oid = "SYNOLOGY-SERVICES-MIB::serviceName"
            is_tag = true

    #
    # Disk.
    #

    [[inputs.snmp.table]]
        oid = "SYNOLOGY-DISK-MIB::diskTable"

        [[inputs.snmp.table.field]]
            oid = "SYNOLOGY-DISK-MIB::diskID"
            is_tag = true

    #
    # RAID.
    #

    [[inputs.snmp.table]]
        oid = "SYNOLOGY-RAID-MIB::raidTable"

        [[inputs.snmp.table.field]]
            oid = "SYNOLOGY-RAID-MIB::raidName"
            is_tag = true

    #
    # SSD cache.
    #

    [[inputs.snmp.table]]
        oid = "SYNOLOGY-FLASHCACHE-MIB::flashCacheTable"

        [[inputs.snmp.table.field]]
            oid = "SYNOLOGY-FLASHCACHE-MIB::flashCacheSpaceDev"
            is_tag = true

    #
    # S.M.A.R.T.
    #

    [[inputs.snmp.table]]
        oid = "SYNOLOGY-SMART-MIB::diskSMARTTable"

        [[inputs.snmp.table.field]]
            oid = "SYNOLOGY-SMART-MIB::diskSMARTInfoDevName"
            is_tag = true

        [[inputs.snmp.table.field]]
            oid = "SYNOLOGY-SMART-MIB::diskSMARTAttrName"
            is_tag = true

    #
    # Space IO.
    #

    [[inputs.snmp.table]]
        oid = "SYNOLOGY-SPACEIO-MIB::spaceIOTable"

        [[inputs.snmp.table.field]]
            oid = "SYNOLOGY-SPACEIO-MIB::spaceIODevice"
            is_tag = true

    #
    # Storage IO.
    #

    [[inputs.snmp.table]]
        oid = "SYNOLOGY-STORAGEIO-MIB::storageIOTable"

        [[inputs.snmp.table.field]]
            oid = "SYNOLOGY-STORAGEIO-MIB::storageIODevice"
            is_tag = true
